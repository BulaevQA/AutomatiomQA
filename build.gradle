plugins {
    id'java-library'
    id'io.qameta.allure' version'2.11.2'
    id'io.freefair.lombok' version '6.0.0-m2'
}

group 'org.example'
version '1.0-SNAPSHOT'

//allure { //отвечает за появление папки build/allure-results https://github.com/allure-framework/allure-gradle
//    report { // cекция репорта
//        version.set("2.21.0") // https://github.com/allure-framework/allure2
//    }
//    adapter {
//        aspectjWeaver.set(true) // обработка аннотации @Step
//        frameworks {
//            junit5 { // используемый в отчете фреймворк
//                adapterVersion.set("2.19.0") // версия аллюра https://github.com/allure-framework/allure2
//            }
//        }
//    }
//}

repositories {
    mavenCentral()
}
dependencies {
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.8.2',
            'org.junit.jupiter:junit-jupiter-engine:5.8.2',
            'io.github.artsok:rerunner-jupiter:2.1.6',
            'org.slf4j:slf4j-simple:2.0.5',

            'com.github.javafaker:javafaker:1.0.2',

            'com.codeborne:selenide:6.12.2',

            'io.qameta.allure:allure-junit5:2.13.6',
            'io.qameta.allure:allure-commandline:2.13.6',
            'io.qameta.allure:allure-assertj:2.13.6',
            'io.qameta.allure:allure-rest-assured:2.13.6',
            'io.qameta.allure:allure-java-commons:2.17.2',
            'io.qameta.allure:allure-selenide:2.21.0',

            'org.aspectj:aspectjweaver:1.9.9.1',

            'org.aeonbits.owner:owner:1.0.12',

            'org.assertj:assertj-core:3.24.2',

            'io.rest-assured:rest-assured:5.3.0',
            'io.rest-assured:json-path:5.3.0',
            'io.rest-assured:xml-path:5.3.0',
            'io.rest-assured:json-schema-validator:5.3.0',

            'org.junit.platform:junit-platform-suite-engine:1.8.2',

            'com.fasterxml.jackson.core:jackson-databind:2.14.1',
            'com.fasterxml.jackson.core:jackson-core:2.14.1',
            'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.1',

            'javax.xml.bind:jaxb-api:2.3.1',
            'com.sun.xml.bind:jaxb-core:2.3.0.1',
            'com.sun.xml.bind:jaxb-impl:2.3.0.1'
    )
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task auth(type: Test) {
    useJUnitPlatform {
        includeTags("Auth")
    }
}
task smoke(type: Test) {
    useJUnitPlatform {
        includeTags("Smoke")
    }
}
task megaMenu(type: Test) {
    useJUnitPlatform {
        includeTags("MegaMenu")
    }
}
test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}